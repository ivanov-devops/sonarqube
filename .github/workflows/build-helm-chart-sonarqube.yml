name: Build SonarQube

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.1

    - name: Fetch deps
      run: |
        helm dependency update charts/sonarqube-dce

    - name: Linting Helm
      run: |
        helm lint charts/sonarqube-dce/

    - name: Calculate new chart version
      id: calculate_version
      run: |
        echo "VERSION=$(cat charts/sonarqube-dce/Chart.yaml | grep version | head -1 | sed -e 's/version: //' | \
        awk -F'[.]' '{ major=$1; minor=$2; patch=$3; patch += 1; minor += patch / 20; patch = patch % 20; printf( \"%d.%d.%d\n\", major, minor, patch ); }' )" \
        >> $GITHUB_ENV
        echo "::set-output name=next_version::$VERSION"
      shell: bash

    - name: Update chart version
      run: |
        sed -i "s/^version: .*/version: '${{ steps.calculate_version.outputs.next_version }}'/1" charts/sonarqube-dce/Chart.yaml

    - name: Debug
      id: version
      run: |
        echo "VERSION=${{ steps.calculate_version.outputs.next_version }}" >> $GITHUB_ENV

    - name: Copy chart to gh-pages branch
      run: |
        git fetch origin gh-pages
        git checkout gh-pages -f
        git checkout main charts/sonarqube-dce/ -f

    - name: Package and indexing Chart
      run: |
        helm dependency update charts/sonarqube-dce/
        helm package charts/sonarqube-dce/
        helm repo index .

    - name: Commit to branch
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
        git add index.yaml sonarqube-dce*.tgz
        git commit -m "[AUTO] New sonarqube-dce Chart version"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.1.0
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "${{ steps.calculate_version.outputs.next_version }}-sonarqube-dce"
        release_name: "${{ steps.calculate_version.outputs.next_version }}-sonarqube-dce"
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        commitish: main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
