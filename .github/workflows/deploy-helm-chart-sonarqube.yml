name: Deploy SonarQube

on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed

jobs:
  wait-for-pages-build:
    runs-on: ubuntu-latest

    steps:
      - name: Wait for pages-build-deployment workflow to complete
        uses: octokit/request-action@v2.x
        id: wait
        with:
          route: GET /repos/:repository/actions/workflows/{workflow_id}/runs/{run_id}
          repository: yourusername/yourrepository   # Replace with your actual GitHub repository name
          workflow_id: ${{ github.event.workflow_run.workflow_id }}
          run_id: ${{ github.event.workflow_run.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if pages-build-deployment workflow was successful
        run: echo "pages-build-deployment workflow outcome: ${{ steps.wait.outputs.workflow_run_conclusion }}"
        if: steps.wait.outputs.workflow_run_conclusion == 'success'

  deploy:
    needs: wait-for-pages-build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Kubernetes
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          cat ${HOME}/.kube/config

      - name: Install Helm Chart
        run: |
          helm repo add sonarqube https://ivanov-devops.github.io/sonarqube/
          helm repo update
          kubectl create namespace sonarqube-dce --dry-run=client -o yaml | kubectl apply -f -
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          helm upgrade --install -n sonarqube-dce sonarqube sonarqube/sonarqube-dce --set ApplicationNodes.jwtSecret=$JWT_SECRET
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
