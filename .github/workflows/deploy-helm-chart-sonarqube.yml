name: Deploy SonarQube

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.1
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch deps
      run: |
        helm dependency update charts/sonarqube-dce

    - name: Linting Helm
      run: |
        helm lint charts/sonarqube-dce/

    - name: Get new chart version
      run: |
        echo "VERSION=$(cat charts/sonarqube-dce/Chart.yaml | grep version | head -1 | sed -e "s/version: //" | \
        awk -F'[.]'  '{ major=$1;minor=$2;patch=$3;patch += 1;minor += patch / 20;patch = patch % 20;printf( "%d.%d.%d\n", major, minor, patch );}' )" \
        >> $GITHUB_ENV

    - name: Update chart version
      run: |
        sed -i 's/^version: .*$/version: '"$VERSION"'/1' charts/sonarqube-dce/Chart.yaml

    - name: Debug
      id: version
      run: |
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Copy chart to gh-pages branch
      run: |
        git fetch origin gh-pages
        git checkout gh-pages -f
        git checkout main charts/sonarqube-dce/ -f
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Package and indexing Chart
      run: |
        helm dependency update charts/sonarqube-dce/
        helm package charts/sonarqube-dce/
        helm repo index .

    - name: Commit to branch
      run: |
        git restore --staged charts/sonarqube-dce/
        git add index.yaml sonarqube-dce*.tgz
        git commit -m "[AUTO] New sonarqube-dce Chart version"
        git push

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "${{ env.VERSION }}-sonarqube-dce"
        release_name: "${{ env.VERSION }}-sonarqube-dce"
        body: ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
        commitish: main

    - name: Set up Kubernetes
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
        cat ${HOME}/.kube/config

    - name: Install Helm Chart
      run: |
        helm repo add sonarqube https://ivanov-devops.github.io/sonarqube
        helm repo update
        kubectl create namespace sonarqube-dce
        export JWT_SECRET=$(echo -n "your_secret" | openssl dgst -sha256 -hmac "your_key" -binary | base64)
        helm upgrade --install -n sonarqube-dce sonarqube sonarqube/sonarqube-dce --set ApplicationNodes.jwtSecret=$JWT_SECRET
