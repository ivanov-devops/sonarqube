name: Deploy SonarQube

on:
  workflow_run:
    workflows: ["Build SonarQube"]
    types:
      - completed

jobs:
  wait-for-pages-build:
    runs-on: ubuntu-latest

    steps:
    - name: Wait for "pages-build-deployment" workflow to complete
      id: wait-pages-build
      run: |
        echo "Waiting for the 'pages-build-deployment' workflow to complete..."
        repo="${{ github.event.repository.full_name }}"
        runID="${{ github.event.workflow_run.id }}"

        # Get the status of the workflow run
        status=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/$repo/actions/runs/$runID" | jq -r '.status')

        while [[ "$status" == "queued" || "$status" == "in_progress" ]]; do
          echo "Current status: $status"
          sleep 5
          status=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$repo/actions/runs/$runID" | jq -r '.status')
        done

        echo "Final status: $status"
        echo "'pages-build-deployment' workflow (run ID: $runID) completed!"

        if [[ "$status" != "completed" ]]; then
          echo "Error: 'pages-build-deployment' workflow did not complete successfully."
          exit 1
        fi

  deploy:
    needs: wait-for-pages-build
    runs-on: ubuntu-latest

    steps:
    - name: Set up Kubernetes
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
        cat ${HOME}/.kube/config

    - name: Install Helm Chart
      run: |
        helm repo add sonarqube https://ivanov-devops.github.io/sonarqube/
        helm repo update
        #kubectl create namespace sonarqube-dce
        kubectl create namespace sonarqube-dce --dry-run=client -o yaml | kubectl apply -f -
        export JWT_SECRET=${{ secrets.JWT_SECRET }}
        helm upgrade --install -n sonarqube-dce sonarqube sonarqube/sonarqube-dce --set ApplicationNodes.jwtSecret=$JWT_SECRET
